---
- name: Установка доменного DNS для сервера {{ inventory_hostname }}
  ansible.builtin.include_role:
    name: dns
  vars:
    dns_servers: "{{ dns_internal }}"

- name: Проверка, что сервер в домене или нет
  ansible.builtin.command: >
    adcli testjoin
  ignore_errors: true
  register: domain_joined
  changed_when: domain_joined.rc != 0

- name: Ввод сервера в домен
  when: domain_joined.failed
  ansible.builtin.command: >
    /usr/bin/join-to-domain.sh -d {{ realm }} -n {{ inventory_hostname }} -u {{ domain_admin }} -p {{ administrator_domain_password | quote }} -w -y
  register: dc_result
  changed_when: dc_result.rc != 0

- name: Создание каталога для общего доступа
  ansible.builtin.file:
    path: "{{ share.dir }}"
    state: directory
    owner: "{{ share.owner }}"
    group: "{{ share.main_group }}"
    mode: "{{ share.permissions }}"

- name: Назначение ACL на каталог общего доступа
  when: share.setfacl_group is defined
  ansible.posix.acl:
    path: "{{ share.dir }}"
    etype: "group"
    entity: "{{ item.name }}"
    permissions: "{{ item.permissions }}"
    default: true
    state: present
  loop: "{{ share.setfacl_group }}"

- name: Подкготовка конфигурации sssd.conf и smb.conf
  ansible.builtin.template:
    src: "{{ item.templete_name }}"
    dest: "{{ item.file_path }}"
    owner: root
    group: root
    mode: "{{ item.file_permissions }}"
    backup: true
  loop:
    # - { templete_name: 'sssd.conf.j2', file_path: '/etc/sssd/sssd.conf', file_permissions: '0600'}
    - { templete_name: 'smb.conf.j2', file_path: '/etc/samba/smb.conf', file_permissions: '0644' }
  vars:
    dc: "{{ groups['dc'] }}"

- name: Запуск сервисов Samba
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  loop:
    # - sssd
    - winbind
    - smb
